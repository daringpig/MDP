/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2014-07-22 21:53:01 UTC)
 * on 2014-10-28 at 18:15:19 UTC 
 * Modify at your own risk.
 */

package tudelft.mdp.backend.endpoints.deviceLogEndpoint;

/**
 * Service definition for DeviceLogEndpoint (v1).
 *
 * <p>
 * An API to manage the historical log of devices usage (NFC tags)
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link DeviceLogEndpointRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class DeviceLogEndpoint extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.19.0 of the deviceLogEndpoint library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://tudelft-mdp.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "deviceLogEndpoint/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public DeviceLogEndpoint(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  DeviceLogEndpoint(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "deleteDeviceLog".
   *
   * This request holds the parameters needed by the deviceLogEndpoint server.  After setting any
   * optional parameters, call the {@link DeleteDeviceLog#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public DeleteDeviceLog deleteDeviceLog(java.lang.Long id) throws java.io.IOException {
    DeleteDeviceLog result = new DeleteDeviceLog(id);
    initialize(result);
    return result;
  }

  public class DeleteDeviceLog extends DeviceLogEndpointRequest<Void> {

    private static final String REST_PATH = "devicelog/{id}";

    /**
     * Create a request for the method "deleteDeviceLog".
     *
     * This request holds the parameters needed by the the deviceLogEndpoint server.  After setting
     * any optional parameters, call the {@link DeleteDeviceLog#execute()} method to invoke the remote
     * operation. <p> {@link DeleteDeviceLog#initialize(com.google.api.client.googleapis.services.Abst
     * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected DeleteDeviceLog(java.lang.Long id) {
      super(DeviceLogEndpoint.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public DeleteDeviceLog setAlt(java.lang.String alt) {
      return (DeleteDeviceLog) super.setAlt(alt);
    }

    @Override
    public DeleteDeviceLog setFields(java.lang.String fields) {
      return (DeleteDeviceLog) super.setFields(fields);
    }

    @Override
    public DeleteDeviceLog setKey(java.lang.String key) {
      return (DeleteDeviceLog) super.setKey(key);
    }

    @Override
    public DeleteDeviceLog setOauthToken(java.lang.String oauthToken) {
      return (DeleteDeviceLog) super.setOauthToken(oauthToken);
    }

    @Override
    public DeleteDeviceLog setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (DeleteDeviceLog) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public DeleteDeviceLog setQuotaUser(java.lang.String quotaUser) {
      return (DeleteDeviceLog) super.setQuotaUser(quotaUser);
    }

    @Override
    public DeleteDeviceLog setUserIp(java.lang.String userIp) {
      return (DeleteDeviceLog) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public DeleteDeviceLog setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public DeleteDeviceLog set(String parameterName, Object value) {
      return (DeleteDeviceLog) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getLastUserLogOfDevice".
   *
   * This request holds the parameters needed by the deviceLogEndpoint server.  After setting any
   * optional parameters, call the {@link GetLastUserLogOfDevice#execute()} method to invoke the
   * remote operation.
   *
   * @param nfcId
   * @param user
   * @return the request
   */
  public GetLastUserLogOfDevice getLastUserLogOfDevice(java.lang.String nfcId, java.lang.String user) throws java.io.IOException {
    GetLastUserLogOfDevice result = new GetLastUserLogOfDevice(nfcId, user);
    initialize(result);
    return result;
  }

  public class GetLastUserLogOfDevice extends DeviceLogEndpointRequest<tudelft.mdp.backend.endpoints.deviceLogEndpoint.model.NfcLogRecord> {

    private static final String REST_PATH = "get_lastUserLog_device";

    /**
     * Create a request for the method "getLastUserLogOfDevice".
     *
     * This request holds the parameters needed by the the deviceLogEndpoint server.  After setting
     * any optional parameters, call the {@link GetLastUserLogOfDevice#execute()} method to invoke the
     * remote operation. <p> {@link GetLastUserLogOfDevice#initialize(com.google.api.client.googleapis
     * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param nfcId
     * @param user
     * @since 1.13
     */
    protected GetLastUserLogOfDevice(java.lang.String nfcId, java.lang.String user) {
      super(DeviceLogEndpoint.this, "GET", REST_PATH, null, tudelft.mdp.backend.endpoints.deviceLogEndpoint.model.NfcLogRecord.class);
      this.nfcId = com.google.api.client.util.Preconditions.checkNotNull(nfcId, "Required parameter nfcId must be specified.");
      this.user = com.google.api.client.util.Preconditions.checkNotNull(user, "Required parameter user must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetLastUserLogOfDevice setAlt(java.lang.String alt) {
      return (GetLastUserLogOfDevice) super.setAlt(alt);
    }

    @Override
    public GetLastUserLogOfDevice setFields(java.lang.String fields) {
      return (GetLastUserLogOfDevice) super.setFields(fields);
    }

    @Override
    public GetLastUserLogOfDevice setKey(java.lang.String key) {
      return (GetLastUserLogOfDevice) super.setKey(key);
    }

    @Override
    public GetLastUserLogOfDevice setOauthToken(java.lang.String oauthToken) {
      return (GetLastUserLogOfDevice) super.setOauthToken(oauthToken);
    }

    @Override
    public GetLastUserLogOfDevice setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetLastUserLogOfDevice) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetLastUserLogOfDevice setQuotaUser(java.lang.String quotaUser) {
      return (GetLastUserLogOfDevice) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetLastUserLogOfDevice setUserIp(java.lang.String userIp) {
      return (GetLastUserLogOfDevice) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String nfcId;

    /**

     */
    public java.lang.String getNfcId() {
      return nfcId;
    }

    public GetLastUserLogOfDevice setNfcId(java.lang.String nfcId) {
      this.nfcId = nfcId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String user;

    /**

     */
    public java.lang.String getUser() {
      return user;
    }

    public GetLastUserLogOfDevice setUser(java.lang.String user) {
      this.user = user;
      return this;
    }

    @Override
    public GetLastUserLogOfDevice set(String parameterName, Object value) {
      return (GetLastUserLogOfDevice) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getUserStatsOfDevice".
   *
   * This request holds the parameters needed by the deviceLogEndpoint server.  After setting any
   * optional parameters, call the {@link GetUserStatsOfDevice#execute()} method to invoke the remote
   * operation.
   *
   * @param maxDate
   * @param minDate
   * @param nfcId
   * @param user
   * @return the request
   */
  public GetUserStatsOfDevice getUserStatsOfDevice(java.lang.Double maxDate, java.lang.Double minDate, java.lang.String nfcId, java.lang.String user) throws java.io.IOException {
    GetUserStatsOfDevice result = new GetUserStatsOfDevice(maxDate, minDate, nfcId, user);
    initialize(result);
    return result;
  }

  public class GetUserStatsOfDevice extends DeviceLogEndpointRequest<tudelft.mdp.backend.endpoints.deviceLogEndpoint.model.CollectionResponseDouble> {

    private static final String REST_PATH = "get_user_stats_device";

    /**
     * Create a request for the method "getUserStatsOfDevice".
     *
     * This request holds the parameters needed by the the deviceLogEndpoint server.  After setting
     * any optional parameters, call the {@link GetUserStatsOfDevice#execute()} method to invoke the
     * remote operation. <p> {@link GetUserStatsOfDevice#initialize(com.google.api.client.googleapis.s
     * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param maxDate
     * @param minDate
     * @param nfcId
     * @param user
     * @since 1.13
     */
    protected GetUserStatsOfDevice(java.lang.Double maxDate, java.lang.Double minDate, java.lang.String nfcId, java.lang.String user) {
      super(DeviceLogEndpoint.this, "GET", REST_PATH, null, tudelft.mdp.backend.endpoints.deviceLogEndpoint.model.CollectionResponseDouble.class);
      this.maxDate = com.google.api.client.util.Preconditions.checkNotNull(maxDate, "Required parameter maxDate must be specified.");
      this.minDate = com.google.api.client.util.Preconditions.checkNotNull(minDate, "Required parameter minDate must be specified.");
      this.nfcId = com.google.api.client.util.Preconditions.checkNotNull(nfcId, "Required parameter nfcId must be specified.");
      this.user = com.google.api.client.util.Preconditions.checkNotNull(user, "Required parameter user must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetUserStatsOfDevice setAlt(java.lang.String alt) {
      return (GetUserStatsOfDevice) super.setAlt(alt);
    }

    @Override
    public GetUserStatsOfDevice setFields(java.lang.String fields) {
      return (GetUserStatsOfDevice) super.setFields(fields);
    }

    @Override
    public GetUserStatsOfDevice setKey(java.lang.String key) {
      return (GetUserStatsOfDevice) super.setKey(key);
    }

    @Override
    public GetUserStatsOfDevice setOauthToken(java.lang.String oauthToken) {
      return (GetUserStatsOfDevice) super.setOauthToken(oauthToken);
    }

    @Override
    public GetUserStatsOfDevice setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetUserStatsOfDevice) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetUserStatsOfDevice setQuotaUser(java.lang.String quotaUser) {
      return (GetUserStatsOfDevice) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetUserStatsOfDevice setUserIp(java.lang.String userIp) {
      return (GetUserStatsOfDevice) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Double maxDate;

    /**

     */
    public java.lang.Double getMaxDate() {
      return maxDate;
    }

    public GetUserStatsOfDevice setMaxDate(java.lang.Double maxDate) {
      this.maxDate = maxDate;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Double minDate;

    /**

     */
    public java.lang.Double getMinDate() {
      return minDate;
    }

    public GetUserStatsOfDevice setMinDate(java.lang.Double minDate) {
      this.minDate = minDate;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String nfcId;

    /**

     */
    public java.lang.String getNfcId() {
      return nfcId;
    }

    public GetUserStatsOfDevice setNfcId(java.lang.String nfcId) {
      this.nfcId = nfcId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String user;

    /**

     */
    public java.lang.String getUser() {
      return user;
    }

    public GetUserStatsOfDevice setUser(java.lang.String user) {
      this.user = user;
      return this;
    }

    @Override
    public GetUserStatsOfDevice set(String parameterName, Object value) {
      return (GetUserStatsOfDevice) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertDeviceLog".
   *
   * This request holds the parameters needed by the deviceLogEndpoint server.  After setting any
   * optional parameters, call the {@link InsertDeviceLog#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link tudelft.mdp.backend.endpoints.deviceLogEndpoint.model.NfcLogRecord}
   * @return the request
   */
  public InsertDeviceLog insertDeviceLog(tudelft.mdp.backend.endpoints.deviceLogEndpoint.model.NfcLogRecord content) throws java.io.IOException {
    InsertDeviceLog result = new InsertDeviceLog(content);
    initialize(result);
    return result;
  }

  public class InsertDeviceLog extends DeviceLogEndpointRequest<tudelft.mdp.backend.endpoints.deviceLogEndpoint.model.NfcLogRecord> {

    private static final String REST_PATH = "nfclogrecord";

    /**
     * Create a request for the method "insertDeviceLog".
     *
     * This request holds the parameters needed by the the deviceLogEndpoint server.  After setting
     * any optional parameters, call the {@link InsertDeviceLog#execute()} method to invoke the remote
     * operation. <p> {@link InsertDeviceLog#initialize(com.google.api.client.googleapis.services.Abst
     * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param content the {@link tudelft.mdp.backend.endpoints.deviceLogEndpoint.model.NfcLogRecord}
     * @since 1.13
     */
    protected InsertDeviceLog(tudelft.mdp.backend.endpoints.deviceLogEndpoint.model.NfcLogRecord content) {
      super(DeviceLogEndpoint.this, "POST", REST_PATH, content, tudelft.mdp.backend.endpoints.deviceLogEndpoint.model.NfcLogRecord.class);
    }

    @Override
    public InsertDeviceLog setAlt(java.lang.String alt) {
      return (InsertDeviceLog) super.setAlt(alt);
    }

    @Override
    public InsertDeviceLog setFields(java.lang.String fields) {
      return (InsertDeviceLog) super.setFields(fields);
    }

    @Override
    public InsertDeviceLog setKey(java.lang.String key) {
      return (InsertDeviceLog) super.setKey(key);
    }

    @Override
    public InsertDeviceLog setOauthToken(java.lang.String oauthToken) {
      return (InsertDeviceLog) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertDeviceLog setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertDeviceLog) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertDeviceLog setQuotaUser(java.lang.String quotaUser) {
      return (InsertDeviceLog) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertDeviceLog setUserIp(java.lang.String userIp) {
      return (InsertDeviceLog) super.setUserIp(userIp);
    }

    @Override
    public InsertDeviceLog set(String parameterName, Object value) {
      return (InsertDeviceLog) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listDeviceLog".
   *
   * This request holds the parameters needed by the deviceLogEndpoint server.  After setting any
   * optional parameters, call the {@link ListDeviceLog#execute()} method to invoke the remote
   * operation.
   *
   * @param nfcId
   * @return the request
   */
  public ListDeviceLog listDeviceLog(java.lang.String nfcId) throws java.io.IOException {
    ListDeviceLog result = new ListDeviceLog(nfcId);
    initialize(result);
    return result;
  }

  public class ListDeviceLog extends DeviceLogEndpointRequest<tudelft.mdp.backend.endpoints.deviceLogEndpoint.model.CollectionResponseNfcLogRecord> {

    private static final String REST_PATH = "list_deviceLog";

    /**
     * Create a request for the method "listDeviceLog".
     *
     * This request holds the parameters needed by the the deviceLogEndpoint server.  After setting
     * any optional parameters, call the {@link ListDeviceLog#execute()} method to invoke the remote
     * operation. <p> {@link ListDeviceLog#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param nfcId
     * @since 1.13
     */
    protected ListDeviceLog(java.lang.String nfcId) {
      super(DeviceLogEndpoint.this, "GET", REST_PATH, null, tudelft.mdp.backend.endpoints.deviceLogEndpoint.model.CollectionResponseNfcLogRecord.class);
      this.nfcId = com.google.api.client.util.Preconditions.checkNotNull(nfcId, "Required parameter nfcId must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListDeviceLog setAlt(java.lang.String alt) {
      return (ListDeviceLog) super.setAlt(alt);
    }

    @Override
    public ListDeviceLog setFields(java.lang.String fields) {
      return (ListDeviceLog) super.setFields(fields);
    }

    @Override
    public ListDeviceLog setKey(java.lang.String key) {
      return (ListDeviceLog) super.setKey(key);
    }

    @Override
    public ListDeviceLog setOauthToken(java.lang.String oauthToken) {
      return (ListDeviceLog) super.setOauthToken(oauthToken);
    }

    @Override
    public ListDeviceLog setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListDeviceLog) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListDeviceLog setQuotaUser(java.lang.String quotaUser) {
      return (ListDeviceLog) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListDeviceLog setUserIp(java.lang.String userIp) {
      return (ListDeviceLog) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String nfcId;

    /**

     */
    public java.lang.String getNfcId() {
      return nfcId;
    }

    public ListDeviceLog setNfcId(java.lang.String nfcId) {
      this.nfcId = nfcId;
      return this;
    }

    @Override
    public ListDeviceLog set(String parameterName, Object value) {
      return (ListDeviceLog) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listDeviceLogByDate".
   *
   * This request holds the parameters needed by the deviceLogEndpoint server.  After setting any
   * optional parameters, call the {@link ListDeviceLogByDate#execute()} method to invoke the remote
   * operation.
   *
   * @param maxDate
   * @param minDate
   * @param nfcId
   * @return the request
   */
  public ListDeviceLogByDate listDeviceLogByDate(java.lang.Double maxDate, java.lang.Double minDate, java.lang.String nfcId) throws java.io.IOException {
    ListDeviceLogByDate result = new ListDeviceLogByDate(maxDate, minDate, nfcId);
    initialize(result);
    return result;
  }

  public class ListDeviceLogByDate extends DeviceLogEndpointRequest<tudelft.mdp.backend.endpoints.deviceLogEndpoint.model.CollectionResponseNfcLogRecord> {

    private static final String REST_PATH = "list_deviceLog_date";

    /**
     * Create a request for the method "listDeviceLogByDate".
     *
     * This request holds the parameters needed by the the deviceLogEndpoint server.  After setting
     * any optional parameters, call the {@link ListDeviceLogByDate#execute()} method to invoke the
     * remote operation. <p> {@link ListDeviceLogByDate#initialize(com.google.api.client.googleapis.se
     * rvices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param maxDate
     * @param minDate
     * @param nfcId
     * @since 1.13
     */
    protected ListDeviceLogByDate(java.lang.Double maxDate, java.lang.Double minDate, java.lang.String nfcId) {
      super(DeviceLogEndpoint.this, "GET", REST_PATH, null, tudelft.mdp.backend.endpoints.deviceLogEndpoint.model.CollectionResponseNfcLogRecord.class);
      this.maxDate = com.google.api.client.util.Preconditions.checkNotNull(maxDate, "Required parameter maxDate must be specified.");
      this.minDate = com.google.api.client.util.Preconditions.checkNotNull(minDate, "Required parameter minDate must be specified.");
      this.nfcId = com.google.api.client.util.Preconditions.checkNotNull(nfcId, "Required parameter nfcId must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListDeviceLogByDate setAlt(java.lang.String alt) {
      return (ListDeviceLogByDate) super.setAlt(alt);
    }

    @Override
    public ListDeviceLogByDate setFields(java.lang.String fields) {
      return (ListDeviceLogByDate) super.setFields(fields);
    }

    @Override
    public ListDeviceLogByDate setKey(java.lang.String key) {
      return (ListDeviceLogByDate) super.setKey(key);
    }

    @Override
    public ListDeviceLogByDate setOauthToken(java.lang.String oauthToken) {
      return (ListDeviceLogByDate) super.setOauthToken(oauthToken);
    }

    @Override
    public ListDeviceLogByDate setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListDeviceLogByDate) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListDeviceLogByDate setQuotaUser(java.lang.String quotaUser) {
      return (ListDeviceLogByDate) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListDeviceLogByDate setUserIp(java.lang.String userIp) {
      return (ListDeviceLogByDate) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Double maxDate;

    /**

     */
    public java.lang.Double getMaxDate() {
      return maxDate;
    }

    public ListDeviceLogByDate setMaxDate(java.lang.Double maxDate) {
      this.maxDate = maxDate;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Double minDate;

    /**

     */
    public java.lang.Double getMinDate() {
      return minDate;
    }

    public ListDeviceLogByDate setMinDate(java.lang.Double minDate) {
      this.minDate = minDate;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String nfcId;

    /**

     */
    public java.lang.String getNfcId() {
      return nfcId;
    }

    public ListDeviceLogByDate setNfcId(java.lang.String nfcId) {
      this.nfcId = nfcId;
      return this;
    }

    @Override
    public ListDeviceLogByDate set(String parameterName, Object value) {
      return (ListDeviceLogByDate) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listDeviceLogFromUser".
   *
   * This request holds the parameters needed by the deviceLogEndpoint server.  After setting any
   * optional parameters, call the {@link ListDeviceLogFromUser#execute()} method to invoke the remote
   * operation.
   *
   * @param nfcId
   * @param user
   * @return the request
   */
  public ListDeviceLogFromUser listDeviceLogFromUser(java.lang.String nfcId, java.lang.String user) throws java.io.IOException {
    ListDeviceLogFromUser result = new ListDeviceLogFromUser(nfcId, user);
    initialize(result);
    return result;
  }

  public class ListDeviceLogFromUser extends DeviceLogEndpointRequest<tudelft.mdp.backend.endpoints.deviceLogEndpoint.model.CollectionResponseNfcLogRecord> {

    private static final String REST_PATH = "list_deviceLog_user";

    /**
     * Create a request for the method "listDeviceLogFromUser".
     *
     * This request holds the parameters needed by the the deviceLogEndpoint server.  After setting
     * any optional parameters, call the {@link ListDeviceLogFromUser#execute()} method to invoke the
     * remote operation. <p> {@link ListDeviceLogFromUser#initialize(com.google.api.client.googleapis.
     * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param nfcId
     * @param user
     * @since 1.13
     */
    protected ListDeviceLogFromUser(java.lang.String nfcId, java.lang.String user) {
      super(DeviceLogEndpoint.this, "GET", REST_PATH, null, tudelft.mdp.backend.endpoints.deviceLogEndpoint.model.CollectionResponseNfcLogRecord.class);
      this.nfcId = com.google.api.client.util.Preconditions.checkNotNull(nfcId, "Required parameter nfcId must be specified.");
      this.user = com.google.api.client.util.Preconditions.checkNotNull(user, "Required parameter user must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListDeviceLogFromUser setAlt(java.lang.String alt) {
      return (ListDeviceLogFromUser) super.setAlt(alt);
    }

    @Override
    public ListDeviceLogFromUser setFields(java.lang.String fields) {
      return (ListDeviceLogFromUser) super.setFields(fields);
    }

    @Override
    public ListDeviceLogFromUser setKey(java.lang.String key) {
      return (ListDeviceLogFromUser) super.setKey(key);
    }

    @Override
    public ListDeviceLogFromUser setOauthToken(java.lang.String oauthToken) {
      return (ListDeviceLogFromUser) super.setOauthToken(oauthToken);
    }

    @Override
    public ListDeviceLogFromUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListDeviceLogFromUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListDeviceLogFromUser setQuotaUser(java.lang.String quotaUser) {
      return (ListDeviceLogFromUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListDeviceLogFromUser setUserIp(java.lang.String userIp) {
      return (ListDeviceLogFromUser) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String nfcId;

    /**

     */
    public java.lang.String getNfcId() {
      return nfcId;
    }

    public ListDeviceLogFromUser setNfcId(java.lang.String nfcId) {
      this.nfcId = nfcId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String user;

    /**

     */
    public java.lang.String getUser() {
      return user;
    }

    public ListDeviceLogFromUser setUser(java.lang.String user) {
      this.user = user;
      return this;
    }

    @Override
    public ListDeviceLogFromUser set(String parameterName, Object value) {
      return (ListDeviceLogFromUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listUserDeviceLog".
   *
   * This request holds the parameters needed by the deviceLogEndpoint server.  After setting any
   * optional parameters, call the {@link ListUserDeviceLog#execute()} method to invoke the remote
   * operation.
   *
   * @param user
   * @return the request
   */
  public ListUserDeviceLog listUserDeviceLog(java.lang.String user) throws java.io.IOException {
    ListUserDeviceLog result = new ListUserDeviceLog(user);
    initialize(result);
    return result;
  }

  public class ListUserDeviceLog extends DeviceLogEndpointRequest<tudelft.mdp.backend.endpoints.deviceLogEndpoint.model.CollectionResponseNfcLogRecord> {

    private static final String REST_PATH = "list_userDeviceLog";

    /**
     * Create a request for the method "listUserDeviceLog".
     *
     * This request holds the parameters needed by the the deviceLogEndpoint server.  After setting
     * any optional parameters, call the {@link ListUserDeviceLog#execute()} method to invoke the
     * remote operation. <p> {@link ListUserDeviceLog#initialize(com.google.api.client.googleapis.serv
     * ices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param user
     * @since 1.13
     */
    protected ListUserDeviceLog(java.lang.String user) {
      super(DeviceLogEndpoint.this, "GET", REST_PATH, null, tudelft.mdp.backend.endpoints.deviceLogEndpoint.model.CollectionResponseNfcLogRecord.class);
      this.user = com.google.api.client.util.Preconditions.checkNotNull(user, "Required parameter user must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListUserDeviceLog setAlt(java.lang.String alt) {
      return (ListUserDeviceLog) super.setAlt(alt);
    }

    @Override
    public ListUserDeviceLog setFields(java.lang.String fields) {
      return (ListUserDeviceLog) super.setFields(fields);
    }

    @Override
    public ListUserDeviceLog setKey(java.lang.String key) {
      return (ListUserDeviceLog) super.setKey(key);
    }

    @Override
    public ListUserDeviceLog setOauthToken(java.lang.String oauthToken) {
      return (ListUserDeviceLog) super.setOauthToken(oauthToken);
    }

    @Override
    public ListUserDeviceLog setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListUserDeviceLog) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListUserDeviceLog setQuotaUser(java.lang.String quotaUser) {
      return (ListUserDeviceLog) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListUserDeviceLog setUserIp(java.lang.String userIp) {
      return (ListUserDeviceLog) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String user;

    /**

     */
    public java.lang.String getUser() {
      return user;
    }

    public ListUserDeviceLog setUser(java.lang.String user) {
      this.user = user;
      return this;
    }

    @Override
    public ListUserDeviceLog set(String parameterName, Object value) {
      return (ListUserDeviceLog) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listUserDeviceLogByDate".
   *
   * This request holds the parameters needed by the deviceLogEndpoint server.  After setting any
   * optional parameters, call the {@link ListUserDeviceLogByDate#execute()} method to invoke the
   * remote operation.
   *
   * @param maxDate
   * @param minDate
   * @param user
   * @return the request
   */
  public ListUserDeviceLogByDate listUserDeviceLogByDate(java.lang.Double maxDate, java.lang.Double minDate, java.lang.String user) throws java.io.IOException {
    ListUserDeviceLogByDate result = new ListUserDeviceLogByDate(maxDate, minDate, user);
    initialize(result);
    return result;
  }

  public class ListUserDeviceLogByDate extends DeviceLogEndpointRequest<tudelft.mdp.backend.endpoints.deviceLogEndpoint.model.CollectionResponseNfcLogRecord> {

    private static final String REST_PATH = "list_userDeviceLog_date";

    /**
     * Create a request for the method "listUserDeviceLogByDate".
     *
     * This request holds the parameters needed by the the deviceLogEndpoint server.  After setting
     * any optional parameters, call the {@link ListUserDeviceLogByDate#execute()} method to invoke
     * the remote operation. <p> {@link ListUserDeviceLogByDate#initialize(com.google.api.client.googl
     * eapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
     * immediately after invoking the constructor. </p>
     *
     * @param maxDate
     * @param minDate
     * @param user
     * @since 1.13
     */
    protected ListUserDeviceLogByDate(java.lang.Double maxDate, java.lang.Double minDate, java.lang.String user) {
      super(DeviceLogEndpoint.this, "GET", REST_PATH, null, tudelft.mdp.backend.endpoints.deviceLogEndpoint.model.CollectionResponseNfcLogRecord.class);
      this.maxDate = com.google.api.client.util.Preconditions.checkNotNull(maxDate, "Required parameter maxDate must be specified.");
      this.minDate = com.google.api.client.util.Preconditions.checkNotNull(minDate, "Required parameter minDate must be specified.");
      this.user = com.google.api.client.util.Preconditions.checkNotNull(user, "Required parameter user must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListUserDeviceLogByDate setAlt(java.lang.String alt) {
      return (ListUserDeviceLogByDate) super.setAlt(alt);
    }

    @Override
    public ListUserDeviceLogByDate setFields(java.lang.String fields) {
      return (ListUserDeviceLogByDate) super.setFields(fields);
    }

    @Override
    public ListUserDeviceLogByDate setKey(java.lang.String key) {
      return (ListUserDeviceLogByDate) super.setKey(key);
    }

    @Override
    public ListUserDeviceLogByDate setOauthToken(java.lang.String oauthToken) {
      return (ListUserDeviceLogByDate) super.setOauthToken(oauthToken);
    }

    @Override
    public ListUserDeviceLogByDate setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListUserDeviceLogByDate) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListUserDeviceLogByDate setQuotaUser(java.lang.String quotaUser) {
      return (ListUserDeviceLogByDate) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListUserDeviceLogByDate setUserIp(java.lang.String userIp) {
      return (ListUserDeviceLogByDate) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Double maxDate;

    /**

     */
    public java.lang.Double getMaxDate() {
      return maxDate;
    }

    public ListUserDeviceLogByDate setMaxDate(java.lang.Double maxDate) {
      this.maxDate = maxDate;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Double minDate;

    /**

     */
    public java.lang.Double getMinDate() {
      return minDate;
    }

    public ListUserDeviceLogByDate setMinDate(java.lang.Double minDate) {
      this.minDate = minDate;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String user;

    /**

     */
    public java.lang.String getUser() {
      return user;
    }

    public ListUserDeviceLogByDate setUser(java.lang.String user) {
      this.user = user;
      return this;
    }

    @Override
    public ListUserDeviceLogByDate set(String parameterName, Object value) {
      return (ListUserDeviceLogByDate) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listUserDeviceLogByDateDevice".
   *
   * This request holds the parameters needed by the deviceLogEndpoint server.  After setting any
   * optional parameters, call the {@link ListUserDeviceLogByDateDevice#execute()} method to invoke
   * the remote operation.
   *
   * @param maxDate
   * @param minDate
   * @param nfcId
   * @param user
   * @return the request
   */
  public ListUserDeviceLogByDateDevice listUserDeviceLogByDateDevice(java.lang.Double maxDate, java.lang.Double minDate, java.lang.String nfcId, java.lang.String user) throws java.io.IOException {
    ListUserDeviceLogByDateDevice result = new ListUserDeviceLogByDateDevice(maxDate, minDate, nfcId, user);
    initialize(result);
    return result;
  }

  public class ListUserDeviceLogByDateDevice extends DeviceLogEndpointRequest<tudelft.mdp.backend.endpoints.deviceLogEndpoint.model.CollectionResponseNfcLogRecord> {

    private static final String REST_PATH = "list_userDeviceLog_datedevice";

    /**
     * Create a request for the method "listUserDeviceLogByDateDevice".
     *
     * This request holds the parameters needed by the the deviceLogEndpoint server.  After setting
     * any optional parameters, call the {@link ListUserDeviceLogByDateDevice#execute()} method to
     * invoke the remote operation. <p> {@link ListUserDeviceLogByDateDevice#initialize(com.google.api
     * .client.googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this
     * instance immediately after invoking the constructor. </p>
     *
     * @param maxDate
     * @param minDate
     * @param nfcId
     * @param user
     * @since 1.13
     */
    protected ListUserDeviceLogByDateDevice(java.lang.Double maxDate, java.lang.Double minDate, java.lang.String nfcId, java.lang.String user) {
      super(DeviceLogEndpoint.this, "GET", REST_PATH, null, tudelft.mdp.backend.endpoints.deviceLogEndpoint.model.CollectionResponseNfcLogRecord.class);
      this.maxDate = com.google.api.client.util.Preconditions.checkNotNull(maxDate, "Required parameter maxDate must be specified.");
      this.minDate = com.google.api.client.util.Preconditions.checkNotNull(minDate, "Required parameter minDate must be specified.");
      this.nfcId = com.google.api.client.util.Preconditions.checkNotNull(nfcId, "Required parameter nfcId must be specified.");
      this.user = com.google.api.client.util.Preconditions.checkNotNull(user, "Required parameter user must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListUserDeviceLogByDateDevice setAlt(java.lang.String alt) {
      return (ListUserDeviceLogByDateDevice) super.setAlt(alt);
    }

    @Override
    public ListUserDeviceLogByDateDevice setFields(java.lang.String fields) {
      return (ListUserDeviceLogByDateDevice) super.setFields(fields);
    }

    @Override
    public ListUserDeviceLogByDateDevice setKey(java.lang.String key) {
      return (ListUserDeviceLogByDateDevice) super.setKey(key);
    }

    @Override
    public ListUserDeviceLogByDateDevice setOauthToken(java.lang.String oauthToken) {
      return (ListUserDeviceLogByDateDevice) super.setOauthToken(oauthToken);
    }

    @Override
    public ListUserDeviceLogByDateDevice setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListUserDeviceLogByDateDevice) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListUserDeviceLogByDateDevice setQuotaUser(java.lang.String quotaUser) {
      return (ListUserDeviceLogByDateDevice) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListUserDeviceLogByDateDevice setUserIp(java.lang.String userIp) {
      return (ListUserDeviceLogByDateDevice) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Double maxDate;

    /**

     */
    public java.lang.Double getMaxDate() {
      return maxDate;
    }

    public ListUserDeviceLogByDateDevice setMaxDate(java.lang.Double maxDate) {
      this.maxDate = maxDate;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Double minDate;

    /**

     */
    public java.lang.Double getMinDate() {
      return minDate;
    }

    public ListUserDeviceLogByDateDevice setMinDate(java.lang.Double minDate) {
      this.minDate = minDate;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String nfcId;

    /**

     */
    public java.lang.String getNfcId() {
      return nfcId;
    }

    public ListUserDeviceLogByDateDevice setNfcId(java.lang.String nfcId) {
      this.nfcId = nfcId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String user;

    /**

     */
    public java.lang.String getUser() {
      return user;
    }

    public ListUserDeviceLogByDateDevice setUser(java.lang.String user) {
      this.user = user;
      return this;
    }

    @Override
    public ListUserDeviceLogByDateDevice set(String parameterName, Object value) {
      return (ListUserDeviceLogByDateDevice) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link DeviceLogEndpoint}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link DeviceLogEndpoint}. */
    @Override
    public DeviceLogEndpoint build() {
      return new DeviceLogEndpoint(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link DeviceLogEndpointRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setDeviceLogEndpointRequestInitializer(
        DeviceLogEndpointRequestInitializer devicelogendpointRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(devicelogendpointRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
